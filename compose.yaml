# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  ms-delete:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/bottles
      spring.datasource.username: bottles
      spring.datasource.password: bouteille1
      spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect
      spring.jpa.hibernate.ddl-auto: update
  db:
     image: postgres
     restart: always
#     secrets:
#       - db-password
     volumes:
       - db-data:/var/lib/postgresql/data
     environment:
       - POSTGRES_DB=petclinic
       - POSTGRES_USER=petclinic
       - POSTGRES_PASSWORD=petclinic
     healthcheck:
       test: [ "CMD", "pg_isready", "-U", "petclinic"]
       interval: 10s
       timeout: 5s
       retries: 5
  nginx:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
volumes:
  db-data:
# secrets:
#   db-password:
#     file: db/password.txt


# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
